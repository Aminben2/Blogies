{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amine\\\\Desktop\\\\Blogs\\\\frontend\\\\src\\\\components\\\\reactionBar.js\",\n  _s = $RefreshSig$();\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addReaction } from \"../store/postsSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ReactionBar = _ref => {\n  _s();\n  let {\n    post\n  } = _ref;\n  const dispatch = useDispatch();\n  const user = useSelector(state => state.auth);\n  const reactions = [{\n    name: \"like\",\n    emoji: \"👍🏼\"\n  }, {\n    name: \"wow\",\n    emoji: \"😮\"\n  }, {\n    name: \"care\",\n    emoji: \"🥰\"\n  }, {\n    name: \"love\",\n    emoji: \"💖\"\n  }];\n  const react = async reactObj => {\n    if (!user) {\n      return;\n    }\n    const response = await fetch(\"http://localhost:4000/api/blogs/\", {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${user.token}`\n      },\n      body: JSON.stringify(reactObj)\n    });\n    const json = await response.json();\n    if (response.ok) {\n      return json;\n    } else {\n      console.log(json.error);\n    }\n  };\n  const reactionButtons = reactions.map(ele => {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"react dark:text-gray-100 dark:active:bg-gray-500\",\n      onClick: () => {\n        const re = react({\n          postId: post._id,\n          reaction: ele.name\n        });\n        if (re) dispatch(addReaction({\n          postId: post._id,\n          reaction: ele.name\n        }));\n      },\n      children: [ele.emoji, post.reactions[ele.name]]\n    }, ele.name, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reactions\",\n    children: reactionButtons\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 10\n  }, this);\n};\n_s(ReactionBar, \"ERMOJPz2/CN1rNPFhRsLNXBEzzQ=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = ReactionBar;\nexport default ReactionBar;\nvar _c;\n$RefreshReg$(_c, \"ReactionBar\");","map":{"version":3,"names":["useDispatch","useSelector","addReaction","ReactionBar","post","dispatch","user","state","auth","reactions","name","emoji","react","reactObj","response","fetch","method","headers","Authorization","token","body","JSON","stringify","json","ok","console","log","error","reactionButtons","map","ele","re","postId","_id","reaction"],"sources":["C:/Users/amine/Desktop/Blogs/frontend/src/components/reactionBar.js"],"sourcesContent":["import { useDispatch, useSelector } from \"react-redux\";\r\nimport { addReaction } from \"../store/postsSlice\";\r\n\r\nconst ReactionBar = ({ post }) => {\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state) => state.auth);\r\n\r\n  const reactions = [\r\n    { name: \"like\", emoji: \"👍🏼\" },\r\n    { name: \"wow\", emoji: \"😮\" },\r\n    { name: \"care\", emoji: \"🥰\" },\r\n    { name: \"love\", emoji: \"💖\" },\r\n  ];\r\n\r\n  const react = async (reactObj) => {\r\n    if (!user) {\r\n      return;\r\n    }\r\n    const response = await fetch(\"http://localhost:4000/api/blogs/\", {\r\n      method: \"PATCH\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${user.token}`,\r\n      },\r\n      body: JSON.stringify(reactObj),\r\n    });\r\n\r\n    const json = await response.json();\r\n    if (response.ok) {\r\n      return json;\r\n    } else {\r\n      console.log(json.error);\r\n    }\r\n  };\r\n\r\n  const reactionButtons = reactions.map((ele) => {\r\n    return (\r\n      <button\r\n        className=\"react dark:text-gray-100 dark:active:bg-gray-500\"\r\n        key={ele.name}\r\n        onClick={() => {\r\n          const re = react({ postId: post._id, reaction: ele.name });\r\n          if (re)\r\n            dispatch(addReaction({ postId: post._id, reaction: ele.name }));\r\n        }}\r\n      >\r\n        {ele.emoji}\r\n        {post.reactions[ele.name]}\r\n      </button>\r\n    );\r\n  });\r\n  return <div className=\"reactions\">{reactionButtons}</div>;\r\n};\r\n\r\nexport default ReactionBar;\r\n"],"mappings":";;AAAA,SAASA,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,WAAW,QAAQ,qBAAqB;AAAC;AAElD,MAAMC,WAAW,GAAG,QAAc;EAAA;EAAA,IAAb;IAAEC;EAAK,CAAC;EAC3B,MAAMC,QAAQ,GAAGL,WAAW,EAAE;EAC9B,MAAMM,IAAI,GAAGL,WAAW,CAAEM,KAAK,IAAKA,KAAK,CAACC,IAAI,CAAC;EAE/C,MAAMC,SAAS,GAAG,CAChB;IAAEC,IAAI,EAAE,MAAM;IAAEC,KAAK,EAAE;EAAO,CAAC,EAC/B;IAAED,IAAI,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAK,CAAC,EAC5B;IAAED,IAAI,EAAE,MAAM;IAAEC,KAAK,EAAE;EAAK,CAAC,EAC7B;IAAED,IAAI,EAAE,MAAM;IAAEC,KAAK,EAAE;EAAK,CAAC,CAC9B;EAED,MAAMC,KAAK,GAAG,MAAOC,QAAQ,IAAK;IAChC,IAAI,CAACP,IAAI,EAAE;MACT;IACF;IACA,MAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAkC,EAAE;MAC/DC,MAAM,EAAE,OAAO;MACfC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClCC,aAAa,EAAG,UAASZ,IAAI,CAACa,KAAM;MACtC,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACT,QAAQ;IAC/B,CAAC,CAAC;IAEF,MAAMU,IAAI,GAAG,MAAMT,QAAQ,CAACS,IAAI,EAAE;IAClC,IAAIT,QAAQ,CAACU,EAAE,EAAE;MACf,OAAOD,IAAI;IACb,CAAC,MAAM;MACLE,OAAO,CAACC,GAAG,CAACH,IAAI,CAACI,KAAK,CAAC;IACzB;EACF,CAAC;EAED,MAAMC,eAAe,GAAGnB,SAAS,CAACoB,GAAG,CAAEC,GAAG,IAAK;IAC7C,oBACE;MACE,SAAS,EAAC,kDAAkD;MAE5D,OAAO,EAAE,MAAM;QACb,MAAMC,EAAE,GAAGnB,KAAK,CAAC;UAAEoB,MAAM,EAAE5B,IAAI,CAAC6B,GAAG;UAAEC,QAAQ,EAAEJ,GAAG,CAACpB;QAAK,CAAC,CAAC;QAC1D,IAAIqB,EAAE,EACJ1B,QAAQ,CAACH,WAAW,CAAC;UAAE8B,MAAM,EAAE5B,IAAI,CAAC6B,GAAG;UAAEC,QAAQ,EAAEJ,GAAG,CAACpB;QAAK,CAAC,CAAC,CAAC;MACnE,CAAE;MAAA,WAEDoB,GAAG,CAACnB,KAAK,EACTP,IAAI,CAACK,SAAS,CAACqB,GAAG,CAACpB,IAAI,CAAC;IAAA,GARpBoB,GAAG,CAACpB,IAAI;MAAA;MAAA;MAAA;IAAA,QASN;EAEb,CAAC,CAAC;EACF,oBAAO;IAAK,SAAS,EAAC,WAAW;IAAA,UAAEkB;EAAe;IAAA;IAAA;IAAA;EAAA,QAAO;AAC3D,CAAC;AAAC,GAjDIzB,WAAW;EAAA,QACEH,WAAW,EACfC,WAAW;AAAA;AAAA,KAFpBE,WAAW;AAmDjB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}